{% comment %}New initial code template{% endcomment %}
{% block env %}{% endblock env %}

{% block start %}
def draw_ghost_legs(result: list[int]) -> list[tuple[int, int]]:
    # your code here
    return []
{% endblock start %}

{% block example %}
print('Example:')
print(draw_ghost_legs([3, 2, 1]))
{% endblock %}

def checker(func: callable, result: list[int]):
    your_result = [r for r in sorted(result)]
    for a, b in func(result):
        your_result[a - 1], your_result[b - 1] = your_result[b - 1], your_result[a - 1]
    return your_result == result

# These "asserts" are used for self-checking
{% block tests %}
{% for t in tests %}
assert {% block call %}checker(draw_ghost_legs, {{t.input|p_args}})
{% endblock %} is {% block result %}True{% endblock %}{% endfor %}
{% endblock %}

{% block final %}
print("The mission is done! Click 'Check Solution' to earn rewards!")
{% endblock final %}
